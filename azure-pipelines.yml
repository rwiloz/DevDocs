parameters:
- name: pool
  type: string
  default: Build
- name: versionNumber
  type: object
  default:
   major: 1
   minor: 0
   seed: 0

stages:
- stage: 'Build_Stage'
  displayName: 'Build'
  
  variables:
    system.debug: false
    buildOutputFolder: 'dist'
    feed: 'CommunicationServicesCUS/G3Npm'
    ##pnpm_config_cache: $(Pipeline.Workspace)/.pnpm-store
    pnpm_config_cache: 'C:/Agent-Cache/.pnpm-store'

    major: ${{ parameters.versionNumber.major }}
    minor: ${{ parameters.versionNumber.minor }}
    patch: $[counter(format('{0}.{1}', variables['major'], variables['minor']), ${{ parameters.versionNumber.seed }})]
    version: '$(major).$(minor).$(patch)'
    
  jobs:
  - job: Build_Job

    pool: ${{ parameters.pool }}

    steps:

    - task: CmdLine@2
      displayName: 'Build Hugo Site'
      inputs:
        script: 'c:\cmds\hugo' 

    - task: ArchiveFiles@2
      displayName: 'Archive build'
      inputs:
        rootFolderOrFile: 'public'
        includeRootFolder: false
        archiveFile: '$(build.artifactstagingdirectory)/devdocs.zip'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathtoPublish: '$(build.artifactstagingdirectory)\devdocs.zip' 
        artifactName: 'devdocs'

    # - task: PublishBuildArtifacts@1
    #   displayName: 'Publish
    #   inputs:
    #     PathtoPublish: 'public'
    #     ArtifactName: 'site'

# # Step 4: Deploy to an Azure Web App
# - task: AzureWebApp@1
#   inputs:
#     azureSubscription: '<Your Azure Service Connection>'
#     appName: '<Your Azure Web App Name>'
#     package: '$(System.DefaultWorkingDirectory)/public'
#   displayName: 'Deploy to Azure Web App'

    # - task: ExtractFiles@1
    #   displayName: 'Extract files'
    #   inputs:
    #     archiveFilePatterns: '$(Pipeline.Workspace)/devdocs.zip'
    #     destinationFolder: '$(Pipeline.Workspace)/files'


- stage: 'Staging_Dev' 
  displayName: 'Development' 
  dependsOn: ['Build_Stage'] 

  variables:
    agentImage: "windows-2022" 

  jobs:
  - deployment: Deploy_Staging #No spaces
    displayName: Staging Deployment
    environment: Development
    variables:
    - name: physicalPath
      value: 'E:\WebImage\Docs\Dev'

    pool: NonProdInternal
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: 'devdocs'

          - task: ExtractFiles@1
            displayName: 'Extract files'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/devdocs/devdocs.zip'
              destinationFolder: '$(physicalPath)'