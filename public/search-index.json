[{"content":"G3\n","date":"2023-09-07","id":0,"permalink":"/g3/","summary":"\u003cp\u003eG3\u003c/p\u003e","tags":[],"title":"G3"},{"content":"Well-thought-through product announcements will help increase feature awareness and engage users with new functionality. Just like sharing your public roadmap, it\u0026rsquo;s also a great way to let potential customers see that you\u0026rsquo;re constantly improving.\nFurther reading Read How to announce product updates and features ","date":"2023-09-07","id":1,"permalink":"/blog/example-post/","summary":"You can use blog posts for announcing product updates and features.","tags":[],"title":"Example Post"},{"content":"","date":"2023-09-07","id":2,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2023-09-07","id":3,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":"Guides lead a user through a specific task they want to accomplish, often with a sequence of steps. Writing a good guide requires thinking about what your users are trying to do.\nFurther reading Read about how-to guides in the Diátaxis framework ","date":"2023-09-07","id":4,"permalink":"/docs/guides/example-guide/","summary":"\u003cp\u003eGuides lead a user through a specific task they want to accomplish, often with a sequence of steps. Writing a good guide requires thinking about what your users are trying to do.\u003c/p\u003e","tags":[],"title":"Example Guide"},{"content":"","date":"2023-09-07","id":5,"permalink":"/docs/g3/flow/","summary":"","tags":[],"title":"Flow"},{"content":"","date":"2023-09-07","id":6,"permalink":"/g3/flow/","summary":"","tags":[],"title":"Flow"},{"content":"","date":"2023-09-07","id":7,"permalink":"/docs/reference/","summary":"","tags":[],"title":"Reference"},{"content":"Reference pages are ideal for outlining how things work in terse and clear terms. Less concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.\nFurther reading Read about reference in the Diátaxis framework ","date":"2023-09-07","id":8,"permalink":"/docs/reference/example-reference/","summary":"\u003cp\u003eReference pages are ideal for outlining how things work in terse and clear terms. Less concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.\u003c/p\u003e","tags":[],"title":"Example Reference"},{"content":"Docs\n","date":"2023-09-07","id":9,"permalink":"/docs/","summary":"\u003cp\u003eDocs\u003c/p\u003e","tags":[],"title":"Docs"},{"content":"","date":"2023-09-07","id":10,"permalink":"/docs/g3/","summary":"","tags":[],"title":"G3 Flow"},{"content":"","date":"2023-09-07","id":11,"permalink":"/privacy/","summary":"","tags":[],"title":"Privacy Policy"},{"content":"","date":"2023-09-07","id":12,"permalink":"/","summary":"","tags":[],"title":"Welcome to Doks"},{"content":"Flow Data Helpers Dialog Helpers XML Mapping Helps map from a the case schema to an xsd as the inital setup The export will create a CSV of the connect configuration\nHTML Mapping Helps map from a the case schema to a HTML template used to create a PDF Sections add login to show or hide parts of the template\nDefault Mapping YAML Display the current process config in YAML, it can be used to edit or copy \u0026amp; paste sections Data The main configuratipn dialog, more below Shared Data cna be mapped to a \u0026ldquo;shared\u0026rdquo; area like variables that tehn can be using in other processes Output Used to translate the default process output Data Mapping Conditions Conditions are used to allow or stop the mapping. Conditons use similar formulas to Calculcations (below) but must return a true or false.\nGet(\u0026#34;case.addMerchant.amex\u0026#34;)==\u0026#34;True\u0026#34;\rSource Type Case Data The default Case Property Allows access to system information outside of the acutal case data, these include caseIdcaseTypeownerstatus (also in case data)createdcompleted Input Calculation See below Shared Trigger Data Paramater Trigger Data Text: Static Text Special Heading Used to break up the configuation on the LHS of the data mapping dialog Array Source The array source is used to break up the source, the array source is interated for each item, the source is then used to access the data using a property with the same name are the array\nArray Source example\nterminalAltLocations[].providers[]\rSource (providers is a signle item of providers[])\nGet(\u0026#34;providers.profession.aphra\u0026#34;) == \u0026#34;Y\u0026#34; \u0026amp;\u0026amp; (Get(\u0026#34;providers.ahpraInfo.surname\u0026#34;) != Get(\u0026#34;providers.surname\u0026#34;) || (HasValue(\u0026#34;providers.ahpraInfo.middleName\u0026#34;) ? (Get(\u0026#34;providers.ahpraInfo.firstName\u0026#34;) + \u0026#34; \u0026#34; + Get(\u0026#34;providers.ahpraInfo.middleName\u0026#34;)) != Get(\u0026#34;providers.givenNames\u0026#34;) : Get(\u0026#34;providers.ahpraInfo.firstName\u0026#34;) != Get(\u0026#34;providers.givenNames\u0026#34;))) ? \u0026#34;\u0026#34; : \u0026#34;Yes\u0026#34;\rSource Used in conjunction with the source type\nThe source cam also start with input. or param. (old logic)\nSpecial Source Prefixes NextRef Gets the next reference number/counter, example below uses the SingleMerch \u0026ldquo;GetNext\u0026rdquo; counter which is configured as\nNextRef:SingleMerch\rExamples of GetNext config\nName Prefix Final Length Counter Amend C 9 126413 SingleMerch A 9 102703 MultiMerch M 9 102664 ChangeOwner Z 9 101012 Now The current date and time\nExtractFile Extacts the most recent file associated with the source, returning the filename\nOptions:\nbase64, as base64 data FileUrlData Extacts the most recent file associated with the source, returning the data in URL base 64 format\nExtractFileDate Extacts the date and time of most recent file associated with the source\nExtractSignaure Extacts signature data to a file (normally SVG data)\nOptions can also be added in this format\nSpecialCode,option1,option2:\rOptions:\nbase64, as base64 data png, as a png image 999x999, image size in pixels Example for a Special Prefix\nextractSignature,64,png,500x300:director1.directorSign\rCalculation (formulas) You can use .Net C# code to calulate a result (or condition true/false), however if you reference a property that doesn\u0026rsquo;t exist it can blow up. For that reason it\u0026rsquo;s good to use the Get() below to ensure it can be processed.\nExamples\ncase.amex.requested?\u0026#34;Y\u0026#34;:\u0026#34;\u0026#34;\rA condition formula with C# functions\ncase.practicePhone.StartsWith(\u0026#34;02\u0026#34;) || case.practicePhone.StartsWith(\u0026#34;03\u0026#34;) || case.practicePhone.StartsWith(\u0026#34;07\u0026#34;) || case.practicePhone.StartsWith(\u0026#34;08\u0026#34;)\rAdditonal inbuilt functions\nFunction Description Get() Returns the property value or null (wont blow up if the property value doesn\u0026rsquo;t exist) GetNum() Returns the decimal value of the the data GetInt() Returns the integer value of the the data GetBool() Returns the boolean value of the the data HasValue() Returns true if the property has a value, or false if it is null or blank (empty String) IsNull() Returns true of the property is null or doesnt have a value IsNotNull() Opposite of IsNull() IsNullOrEmpty() Returns true of the property is null, doesnt have a value or is an empty string (Blank) Count() Used to count how many items are in an array IsValid() Checks the validation rules in the schema, (still WIP) Formating the data NB Any formating will cause the data to be converted to a string first. If you require objects as the output, don\u0026rsquo;t use formating\nformat Prefix Description LOOKUP Returns the description for the value using the lookup defined in the schema (WIP) LOOKUP:[lookupname] Returns the description for the value using a lookup LOOKUPREV:[lookupname] Returns the value for the description using a lookup (Reverse lookup) contains dd or mm Returns the value formated as Date/Time TITLE converts the data to title case UPPER converts the data to upper case LOWER converts the data to lower case TEXT:[format] formats the data using the text format NUM:[format] formats the data using the number format, Eg #,##0.00 [format] automatic text or number formating CALC: a special format at the will use a calculation/formula instead Old formating\nformat Prefix Description =VALUE returns Y of the data matches the VALUE or it will return N Example\nFormat dd/mm/yyyy for a date\rComplex Example, the source creates the data, in this example that was the file data, this is a special case where CALC was used to rename the file, not calculate the data\nCALC:case.reference+\u0026#34;_\u0026#34;+case.abnInfo.abn+\u0026#34;_IC_\u0026#34;+(providers.profession.providerAllocatedBy==\u0026#34;Medicare\u0026#34;?providers.medicareProviderNumber:((Get(\u0026#34;providers.profession.hicapsNumberSupport\u0026#34;)==\u0026#34;Y\u0026#34; \u0026amp;\u0026amp; Get(\u0026#34;providers.issuedNumberType\u0026#34;)==\u0026#34;Medibank\u0026#34;) || (Get(\u0026#34;providers.profession.hicapsNumberSupport\u0026#34;)==\u0026#34;N\u0026#34; \u0026amp;\u0026amp; Get(\u0026#34;providers.profession.providerAllocatedBy\u0026#34;).Contains(\u0026#34;Medibank\u0026#34;)))?providers.medibankProviderNumber:providers.issuedNumberType==\u0026#34;Yes\u0026#34;?providers.hicapsProviderNumber:\u0026#34;Request\u0026#34;)+\u0026#34;_0\u0026#34;+providers._id+\u0026#34;_\u0026#34;+DateTime.Now.Date.ToString(\u0026#34;yyyyMMdd\u0026#34;)\rDefault A default value is used if the data is blank/empty\nDisable Will disable processing of this item\n","date":"2023-09-07","id":13,"permalink":"/g3/flow/example-reference/","summary":"\u003ch1 id=\"flow-data-helpers\"\u003eFlow Data Helpers\u003c/h1\u003e\n\u003ch2 id=\"dialog-helpers\"\u003eDialog Helpers\u003c/h2\u003e\n\u003ch3 id=\"xml-mapping\"\u003eXML Mapping\u003c/h3\u003e\n\u003cp\u003eHelps map from a the case schema to an xsd as the inital setup\nThe export will create a CSV of the connect configuration\u003c/p\u003e","tags":[],"title":"Example Reference"},{"content":"Flow Data Helpers Dialog Helpers XML Mapping Helps map from a the case schema to an xsd as the inital setup The export will create a CSV of the connect configuration\nHTML Mapping Helps map from a the case schema to a HTML template used to create a PDF Sections add login to show or hide parts of the template\nDefault Mapping YAML Display the current process config in YAML, it can be used to edit or copy \u0026amp; paste sections Data The main configuratipn dialog, more below Shared Data cna be mapped to a \u0026ldquo;shared\u0026rdquo; area like variables that tehn can be using in other processes Output Used to translate the default process output Data Mapping Conditions Conditions are used to allow or stop the mapping. Conditons use similar formulas to Calculcations (below) but must return a true or false.\nGet(\u0026#34;case.addMerchant.amex\u0026#34;)==\u0026#34;True\u0026#34;\rSource Type Case Data The default Case Property Allows access to system information outside of the acutal case data, these include caseIdcaseTypeownerstatus (also in case data)createdcompleted Input Calculation See below Shared Trigger Data Paramater Trigger Data Text: Static Text Special Heading Used to break up the configuation on the LHS of the data mapping dialog Array Source The array source is used to break up the source, the array source is interated for each item, the source is then used to access the data using a property with the same name are the array\nArray Source example\nterminalAltLocations[].providers[]\rSource (providers is a signle item of providers[])\nGet(\u0026#34;providers.profession.aphra\u0026#34;) == \u0026#34;Y\u0026#34; \u0026amp;\u0026amp; (Get(\u0026#34;providers.ahpraInfo.surname\u0026#34;) != Get(\u0026#34;providers.surname\u0026#34;) || (HasValue(\u0026#34;providers.ahpraInfo.middleName\u0026#34;) ? (Get(\u0026#34;providers.ahpraInfo.firstName\u0026#34;) + \u0026#34; \u0026#34; + Get(\u0026#34;providers.ahpraInfo.middleName\u0026#34;)) != Get(\u0026#34;providers.givenNames\u0026#34;) : Get(\u0026#34;providers.ahpraInfo.firstName\u0026#34;) != Get(\u0026#34;providers.givenNames\u0026#34;))) ? \u0026#34;\u0026#34; : \u0026#34;Yes\u0026#34;\rSource Used in conjunction with the source type\nThe source cam also start with input. or param. (old logic)\nSpecial Source Prefixes NextRef Gets the next reference number/counter, example below uses the SingleMerch \u0026ldquo;GetNext\u0026rdquo; counter which is configured as\nNextRef:SingleMerch\rExamples of GetNext config\nName Prefix Final Length Counter Amend C 9 126413 SingleMerch A 9 102703 MultiMerch M 9 102664 ChangeOwner Z 9 101012 Now The current date and time\nExtractFile Extacts the most recent file associated with the source, returning the filename\nOptions:\nbase64, as base64 data FileUrlData Extacts the most recent file associated with the source, returning the data in URL base 64 format\nExtractFileDate Extacts the date and time of most recent file associated with the source\nExtractSignaure Extacts signature data to a file (normally SVG data)\nOptions can also be added in this format\nSpecialCode,option1,option2:\rOptions:\nbase64, as base64 data png, as a png image 999x999, image size in pixels Example for a Special Prefix\nextractSignature,64,png,500x300:director1.directorSign\rCalculation (formulas) You can use .Net C# code to calulate a result (or condition true/false), however if you reference a property that doesn\u0026rsquo;t exist it can blow up. For that reason it\u0026rsquo;s good to use the Get() below to ensure it can be processed.\nExamples\ncase.amex.requested?\u0026#34;Y\u0026#34;:\u0026#34;\u0026#34;\rA condition formula with C# functions\ncase.practicePhone.StartsWith(\u0026#34;02\u0026#34;) || case.practicePhone.StartsWith(\u0026#34;03\u0026#34;) || case.practicePhone.StartsWith(\u0026#34;07\u0026#34;) || case.practicePhone.StartsWith(\u0026#34;08\u0026#34;)\rAdditonal inbuilt functions\nFunction Description Get() Returns the property value or null (wont blow up if the property value doesn\u0026rsquo;t exist) GetNum() Returns the decimal value of the the data GetInt() Returns the integer value of the the data GetBool() Returns the boolean value of the the data HasValue() Returns true if the property has a value, or false if it is null or blank (empty String) IsNull() Returns true of the property is null or doesnt have a value IsNotNull() Opposite of IsNull() IsNullOrEmpty() Returns true of the property is null, doesnt have a value or is an empty string (Blank) Count() Used to count how many items are in an array IsValid() Checks the validation rules in the schema, (still WIP) Formating the data NB Any formating will cause the data to be converted to a string first. If you require objects as the output, don\u0026rsquo;t use formating\nformat Prefix Description LOOKUP Returns the description for the value using the lookup defined in the schema (WIP) LOOKUP:[lookupname] Returns the description for the value using a lookup LOOKUPREV:[lookupname] Returns the value for the description using a lookup (Reverse lookup) contains dd or mm Returns the value formated as Date/Time TITLE converts the data to title case UPPER converts the data to upper case LOWER converts the data to lower case TEXT:[format] formats the data using the text format NUM:[format] formats the data using the number format, Eg #,##0.00 [format] automatic text or number formating CALC: a special format at the will use a calculation/formula instead Old formating\nformat Prefix Description =VALUE returns Y of the data matches the VALUE or it will return N Example\nFormat dd/mm/yyyy for a date\rComplex Example, the source creates the data, in this example that was the file data, this is a special case where CALC was used to rename the file, not calculate the data\nCALC:case.reference+\u0026#34;_\u0026#34;+case.abnInfo.abn+\u0026#34;_IC_\u0026#34;+(providers.profession.providerAllocatedBy==\u0026#34;Medicare\u0026#34;?providers.medicareProviderNumber:((Get(\u0026#34;providers.profession.hicapsNumberSupport\u0026#34;)==\u0026#34;Y\u0026#34; \u0026amp;\u0026amp; Get(\u0026#34;providers.issuedNumberType\u0026#34;)==\u0026#34;Medibank\u0026#34;) || (Get(\u0026#34;providers.profession.hicapsNumberSupport\u0026#34;)==\u0026#34;N\u0026#34; \u0026amp;\u0026amp; Get(\u0026#34;providers.profession.providerAllocatedBy\u0026#34;).Contains(\u0026#34;Medibank\u0026#34;)))?providers.medibankProviderNumber:providers.issuedNumberType==\u0026#34;Yes\u0026#34;?providers.hicapsProviderNumber:\u0026#34;Request\u0026#34;)+\u0026#34;_0\u0026#34;+providers._id+\u0026#34;_\u0026#34;+DateTime.Now.Date.ToString(\u0026#34;yyyyMMdd\u0026#34;)\rDefault A default value is used if the data is blank/empty\nDisable Will disable processing of this item\n","date":"0001-01-01","id":14,"permalink":"/docs/g3/flow/","summary":"\u003ch1 id=\"flow-data-helpers\"\u003eFlow Data Helpers\u003c/h1\u003e\n\u003ch2 id=\"dialog-helpers\"\u003eDialog Helpers\u003c/h2\u003e\n\u003ch3 id=\"xml-mapping\"\u003eXML Mapping\u003c/h3\u003e\n\u003cp\u003eHelps map from a the case schema to an xsd as the inital setup\nThe export will create a CSV of the connect configuration\u003c/p\u003e","tags":[],"title":""},{"content":"","date":"0001-01-01","id":15,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":16,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":17,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"}]